package step.learning.oop;

public interface Automatic {
    /*
    Інтерфейс-маркер, без методів, вживається тільки для групування/помітки
     */
}
/*
Інтерфейси (в ООП) - абстрактні класи з додатковими обмеженнями:
 - лише методи
 - лише абстрактні
 - лише доступні (public)

Використання інтерфейсів:
 - інтерфейси-контракти вимагають реалізації деякого набору методів з метою
    автоматичного включення в функціональність системи (реалізуємо
    контроллер, він автоматично підключається і стає частиною проєкту)
    Можна відокремити DIP-інтерфейси (Dependency Inversion Principle
    у SOLID)
      X class { Md5Hash hash }             ! class { IHash hash }
    З метою додержання принципу інтерфейси можуть з'являтись навіть після
    оголошення класів.
 - інтерфейси-маркери містять мінімальну кількість методів (або порожні),
     використовуються для "помітки" приналежності класу до певної групи.
     Часто закінчуються на "-able", підкреслюючи наявність певної ознаки.
     Можно провести аналогію з тегами (соц.мережі, публікації).
     Також тут - анотації (атрибути у C#) - особливий вид інтерфейсів
     для помітки частин класів (полів, методів, самих класів, тощо)
 */
