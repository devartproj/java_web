<%@ page contentType="text/html;charset=UTF-8" %>
<h1>Сервлетні фільтри</h1>
<p>
  Фільтри у JSP (Сервлетні фільтри) - реалізація концепції Middleware.
  Запит &rarr; <u>фільтр1 &rarr; фільтрNew &rarr; фільтр2</u> &lt; сервлет &lt; doMethod()
</p>
<ul class="collection">
  <li class="collection-item">
    Задача фільтрів - робота із запитом (або відповіддю) до його розгалуження
    за маршрутом (сервлетом) чи методом запиту (GET, POST, ...). Також
    ідея Middleware передбачає можливість додавання нових фільтрів "в середину"
    вже наявного ланцюга викликів. У фільтрів розділяють "прямий хід" від
    запиту до представлення (View/JSP) та зворотний хід (повернення відповіді)
  </li>
  <li class="collection-item">
    Фільтри створюються імплементацією інтерфейсу Filter. Для прикладу
    створюємо фільтр CharsetFilter, задача якого встановити кодування
    запиту та відповіді. Особливість даної задачі полягає у тому, що
    зміна кодування можлива тільки ДО першого звернення на читання
    чи запис. Таке обмеження пов'язане з тим, що різні кодування мають
    різні розміри (у байтах) для символів і якщо почати читати з
    одним кодуванням, продовжувати з іншим буде неправильним.
    Відповідно, даний фільтр бажано встановити найпершим, щоб гарантувати
    першість по відношенню до інших операцій.
  </li>
  <li class="collection-item">
    для передачі даних з фільтра можна використовувати атрибути запиту
    <code>req.setAttribute( "charset", charset ) ;</code>, доступ
    до цих параметрів - у будь-якому місці, зокрема у jsp:
    charset = '<%= request.getAttribute("charset") %>'
  </li>
  <li class="collection-item">
    Реєстрація фільтрів аналогічна сервлетам і можлива тими ж способами
    (web.xml, annotation, IoC). Але через те, що фільтрам значно важливіший
    порядок (ніж сервлетам), враховуючи, що анотації не гарантують порядок,
    реєстрація здійснюється або у web.xml, або у конфігураціях ІоС.
  </li>
  <li class="collection-item">
    У фільтрах можна зупиняти оброблення запиту просто не продовжуючи
    подальші фільтри, також можна робити перенаправлення, змінюючи рух
    обробника.
  </li>
</ul>